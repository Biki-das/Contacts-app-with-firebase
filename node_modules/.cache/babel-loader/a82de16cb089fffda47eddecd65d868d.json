{"ast":null,"code":"//TODO: create contact using all actions\nimport { act } from \"react-dom/test-utils\";\nimport { SET_CONTACT, SET_LOADING, CONTACT_TO_UPDATE, SET_SINGLE_CONTACT } from \"./action.types\"; //TODO: use switch case\n\nexport default ((state, action) => {\n  switch (action.type) {\n    case SET_CONTACT:\n      return action.payload == null ? { ...state,\n        contacts: []\n      } : { ...state,\n        contacts: action.payload\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        isLoading: action.payload\n      };\n\n    case CONTACT_TO_UPDATE:\n      return { ...state,\n        contacttoUpdate: action.payload,\n        contacttoUpdateKey: action.key\n      };\n\n    case SET_SINGLE_CONTACT:\n      return { ...state,\n        contact: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/BIKI PC/Downloads/attachment_01_A_challenge_application_lyst4695/src/context/reducer.js"],"names":["act","SET_CONTACT","SET_LOADING","CONTACT_TO_UPDATE","SET_SINGLE_CONTACT","state","action","type","payload","contacts","isLoading","contacttoUpdate","contacttoUpdateKey","key","contact"],"mappings":"AAAA;AAEA,SAASA,GAAT,QAAoB,sBAApB;AACA,SACEC,WADF,EAEEC,WAFF,EAGEC,iBAHF,EAIEC,kBAJF,QAKO,gBALP,C,CAOA;;AACA,gBAAe,CAACC,KAAD,EAAOC,MAAP,KAAkB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,WAAL;AACE,aAAOK,MAAM,CAACE,OAAP,IAAkB,IAAlB,GAAyB,EAAC,GAAGH,KAAJ;AAAUI,QAAAA,QAAQ,EAAC;AAAnB,OAAzB,GACP,EACE,GAAGJ,KADL;AACWI,QAAAA,QAAQ,EAAEH,MAAM,CAACE;AAD5B,OADA;;AAIA,SAAKN,WAAL;AACA,aAAO,EACL,GAAGG,KADE;AACIK,QAAAA,SAAS,EAAEJ,MAAM,CAACE;AADtB,OAAP;;AAGA,SAAKL,iBAAL;AACE,aAAM,EACJ,GAAGE,KADC;AAEJM,QAAAA,eAAe,EAAEL,MAAM,CAACE,OAFpB;AAGJI,QAAAA,kBAAkB,EAAEN,MAAM,CAACO;AAHvB,OAAN;;AAMA,SAAKT,kBAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELS,QAAAA,OAAO,EAAER,MAAM,CAACE;AAFX,OAAP;;AAMN;AACE,aAAOH,KAAP;AAzBJ;AA2BC,CA5BD","sourcesContent":["//TODO: create contact using all actions\n\nimport { act } from \"react-dom/test-utils\";\nimport {\n  SET_CONTACT,\n  SET_LOADING,\n  CONTACT_TO_UPDATE,\n  SET_SINGLE_CONTACT\n} from \"./action.types\";\n\n//TODO: use switch case\nexport default (state,action) => {\nswitch (action.type) {\n  case SET_CONTACT:\n    return action.payload == null ? {...state,contacts:[]} : \n    {\n      ...state,contacts: action.payload\n    }\n    case SET_LOADING:\n    return {\n      ...state,isLoading: action.payload\n    }\n    case CONTACT_TO_UPDATE:\n      return{\n        ...state,\n        contacttoUpdate: action.payload,\n        contacttoUpdateKey: action.key\n\n      }\n      case SET_SINGLE_CONTACT:\n        return {\n          ...state,\n          contact: action.payload\n        }\n    \n\n  default:\n    return state;\n}\n}\n\n"]},"metadata":{},"sourceType":"module"}