{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIKI PC\\\\Downloads\\\\attachment_01_A_challenge_application_lyst4695\\\\src\\\\components\\\\Contact.js\";\n// https://firebase.google.com/docs/database/web/read-and-write?authuser=1#read_data_once\nimport React, { useContext } from \"react\";\nimport { Row, Col } from \"reactstrap\"; // icons\n\nimport { FaRegStar, FaStar } from \"react-icons/fa\";\nimport { MdDelete, MdEdit } from \"react-icons/md\"; //TODO: add firebase\n\nimport firebase from 'firebase/app'; // context stuffs\n//TODO: import context and action: update and single_contact\n\nimport { ContactContext } from '../context/Context';\nimport { CONTACT_TO_UPDATE, SET_SINGLE_CONTACT } from '../context/action.types';\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nconst Contact = ({\n  contact,\n  contactKey\n}) => {\n  //TODO: destructuring dispatch from the context\n  const {\n    dispatch\n  } = useContext(ContactContext); // history hooks to get history\n\n  const history = useHistory(); // to delete the contact when delete contact is clicked\n\n  const deleteContact = () => {\n    //TODO: create this method from firebase\n    firebase.database().ref(`/contacts/${contactKey}`).remove().then(() => {\n      toast(\"Deleted successfully\", {\n        type: 'warning'\n      });\n    }).catch(err => console.log(errr));\n  }; // update the star/important contact ,ie, star it or unstar the single contact\n\n\n  const updateImpContact = () => {\n    //TODO: update (star) contact, use contactKey\n    firebase.database().ref(`/contacts/${contactKey}`).update({\n      star: !contact.star\n    }, err => {\n      console.log(err);\n    }).then(() => {\n      toast(\"contact Updated\", {\n        type: 'info'\n      });\n    }).catch(err => console.log(err));\n  }; // when the update icon/ pen ion is clicked\n\n\n  const updateContact = () => {\n    // dispatching one action to update contact\n    //TODO: use dispatch to update\n    dispatch({\n      type: CONTACT_TO_UPDATE,\n      payload: contact,\n      key: contactKey\n    }); // and pushing to the add contact screen\n\n    history.push(\"/contact/add\");\n  }; // to view a single contact in the contact/view screen\n\n\n  const viewSingleContact = contact => {\n    // setting single contact in state\n    //TODO: use dispatch to view single contact\n    dispatch({\n      type: SET_SINGLE_CONTACT,\n      payload: contact\n    }); // sending...\n\n    history.push(\"/contact/view\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"1\",\n    className: \"d-flex justify-content-center align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon\",\n    onClick: () => updateImpContact(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, contact.star ? /*#__PURE__*/React.createElement(FaStar, {\n    className: \" text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(FaRegStar, {\n    className: \" text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: \"2\",\n    className: \"d-flex justify-content-center align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: contact.picture,\n    alt: \"\",\n    className: \"img-circle profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: \"8\",\n    onClick: () => viewSingleContact(contact),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, contact.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, contact.phoneNumber), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, contact.email), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, contact.address)), /*#__PURE__*/React.createElement(Col, {\n    md: \"1\",\n    className: \"d-flex justify-content-center align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MdDelete, {\n    onClick: () => deleteContact(),\n    color: \"danger\",\n    className: \"text-danger icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MdEdit, {\n    className: \"icon text-info ml-2\",\n    onClick: () => updateContact(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Contact;","map":{"version":3,"sources":["C:/Users/BIKI PC/Downloads/attachment_01_A_challenge_application_lyst4695/src/components/Contact.js"],"names":["React","useContext","Row","Col","FaRegStar","FaStar","MdDelete","MdEdit","firebase","ContactContext","CONTACT_TO_UPDATE","SET_SINGLE_CONTACT","useHistory","toast","Contact","contact","contactKey","dispatch","history","deleteContact","database","ref","remove","then","type","catch","err","console","log","errr","updateImpContact","update","star","updateContact","payload","key","push","viewSingleContact","picture","name","phoneNumber","email","address"],"mappings":"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","sourcesContent":["// https://firebase.google.com/docs/database/web/read-and-write?authuser=1#read_data_once\n\nimport React, { useContext } from \"react\";\nimport { Row, Col } from \"reactstrap\";\n\n// icons\nimport { FaRegStar, FaStar } from \"react-icons/fa\";\nimport { MdDelete, MdEdit } from \"react-icons/md\";\n\n//TODO: add firebase\nimport firebase from 'firebase/app'\n\n// context stuffs\n//TODO: import context and action: update and single_contact\nimport {ContactContext} from '../context/Context'\nimport {CONTACT_TO_UPDATE,SET_SINGLE_CONTACT} from '../context/action.types'\n\n\n\nimport { useHistory } from \"react-router-dom\";\n\nimport { toast } from \"react-toastify\";\n\nconst Contact = ({ contact, contactKey }) => {\n  //TODO: destructuring dispatch from the context\n  const {dispatch} = useContext(ContactContext)\n\n  // history hooks to get history\n  const history = useHistory();\n\n  // to delete the contact when delete contact is clicked\n  const deleteContact = () => {\n    //TODO: create this method from firebase\n    firebase.database()\n    .ref(`/contacts/${contactKey}`)\n    .remove()\n    .then( () => {\n      toast(\"Deleted successfully\", {type:'warning'})\n    })\n    .catch(err => console.log(errr))\n  };\n\n  // update the star/important contact ,ie, star it or unstar the single contact\n  const updateImpContact = () => {\n    //TODO: update (star) contact, use contactKey\n    firebase.database()\n    .ref(`/contacts/${contactKey}`)\n    .update(\n      {\n        star: !contact.star\n      },\n      err => {\n        console.log(err);\n      }\n    )\n    .then(() => {toast(\"contact Updated\",{type:'info'})})\n    .catch(err => console.log(err))\n  };\n\n  // when the update icon/ pen ion is clicked\n  const updateContact = () => {\n    // dispatching one action to update contact\n    //TODO: use dispatch to update\ndispatch({\n  type: CONTACT_TO_UPDATE,\n  payload: contact,\n  key: contactKey\n\n})\n    // and pushing to the add contact screen\n    history.push(\"/contact/add\");\n  };\n\n  // to view a single contact in the contact/view screen\n  const viewSingleContact = contact => {\n    // setting single contact in state\n    //TODO: use dispatch to view single contact\n    dispatch({\n      type: SET_SINGLE_CONTACT,\n      payload: contact\n      \n    })\n\n    // sending...\n    history.push(\"/contact/view\");\n  };\n\n  return (\n    <>\n      <Row>\n        <Col\n          md=\"1\"\n          className=\"d-flex justify-content-center align-items-center\"\n        >\n          <div className=\"icon\" onClick={() => updateImpContact()}>\n            {contact.star ? (\n              <FaStar className=\" text-primary\" />\n            ) : (\n              <FaRegStar className=\" text-info\" />\n            )}\n          </div>\n        </Col>\n        <Col\n          md=\"2\"\n          className=\"d-flex justify-content-center align-items-center\"\n        >\n          <img src={contact.picture} alt=\"\" className=\"img-circle profile\" />\n        </Col>\n        <Col md=\"8\" onClick={() => viewSingleContact(contact)}>\n          <div className=\"text-primary\">{contact.name}</div>\n\n          <div className=\"text-secondary\">{contact.phoneNumber}</div>\n          <div className=\"text-secondary\">\n             {contact.email}  \n          </div>\n\n          <div className=\"text-info\">{contact.address}</div>\n        </Col>\n        <Col\n          md=\"1\"\n          className=\"d-flex justify-content-center align-items-center\"\n        >\n          <MdDelete\n            onClick={() => deleteContact()}\n            color=\"danger\"\n            className=\"text-danger icon\"\n          />\n          <MdEdit\n            className=\"icon text-info ml-2\"\n            onClick={() => updateContact()}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}